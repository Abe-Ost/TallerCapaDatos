@model SggApp.Web.Models.GastoFormViewModel
    @{
        ViewData["Title"] = "Editar Gasto";
    }
    
    <div class="container mt-4">
        <div class="card">
            <div class="card-header">
                <h1 class="card-title">@ViewData["Title"]</h1>
            </div>
            <div class="card-body">
                <form asp-action="Edit" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" asp-for="Id" /> @* Campo oculto para el ID *@
                    <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label asp-for="Fecha" class="form-label"></label>
                            <input asp-for="Fecha" class="form-control" type="date" />
                            <span asp-validation-for="Fecha" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label asp-for="Monto" class="form-label"></label>
                            <input asp-for="Monto" class="form-control" type="number" step="0.01" />
                            <span asp-validation-for="Monto" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label asp-for="CategoriaId" class="form-label"></label>
                            <select asp-for="CategoriaId" class="form-select" asp-items="@Model.CategoriasDisponibles">
                                <option value="">-- Seleccione una Categor√≠a --</option>
                            </select>
                            <span asp-validation-for="CategoriaId" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label asp-for="MonedaId" class="form-label"></label>
                            <select asp-for="MonedaId" class="form-select" asp-items="@Model.MonedasDisponibles">
                                <option value="">-- Seleccione una Moneda --</option>
                            </select>
                            <span asp-validation-for="MonedaId" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label asp-for="Descripcion" class="form-label"></label>
                        <textarea asp-for="Descripcion" class="form-control" rows="3"></textarea>
                        <span asp-validation-for="Descripcion" class="text-danger"></span>
                    </div>
                    <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-4">
                        <button type="submit" class="btn btn-success">
                            <i class="bi bi-save"></i> Guardar Cambios
                        </button>
                        <a asp-action="Index" class="btn btn-secondary">
                            <i class="bi bi-x-circle"></i> Cancelar
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>
    
    @section Scripts {
        @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    }
    ```
@*
**Key differences from Create.cshtml:**

* `<form asp-action="Edit" method="post">`  This form is submitting to the `Edit` action of the controller. [cite: 143]
* `<input type="hidden" asp-for="Id" />`  This hidden input field is crucial; it sends the ID of the gasto being edited back to the controller. [cite: 144]
* `ViewData["Title"] = "Editar Gasto";` The title reflects that this is the edit view. [cite: 143]

The rest of the form structure, validation, and use of Tag Helpers are very similar to the `Create.cshtml` view. *@